server {
    listen 8080 default_server;
    server_name _;
    charset utf-8;
    
    client_body_buffer_size 5120M;
    client_max_body_size 5120M;

    add_header 'Access-Control-Allow-Origin' '*'; # 允许所有源
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE'; # 允许的HTTP方法
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization'; # 允许的请求头
    add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range'; # 允许前端访问的响应头
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy "no-referrer";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; always";
    add_header Cache-Control "no-cache";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src * data: base64;";

    resolver 8.8.8.8 8.8.4.4 valid=60s;
    resolver_timeout 5s;

    if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE)$) {
        return 444;
    }

    location ~ /\. {
        deny all;
        return 404;
    }

    location / {
        root /usr/share/euler-copilot-web;
        try_files $uri $uri/ /index.html;
        if (!-e $request_filename) {
            return 404;
        }
    }

    location /copilot {
        alias /usr/share/euler-copilot-web;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /login {
        root /usr/share/euler-copilot-web;
        try_files $uri $uri/ /index.html;
    }

    location /api/health_check {
        deny all;
        return 404;
    }

    location /api/ {
        proxy_set_header X-Forwarded-For $http_x_real_ip;
        add_header Cache-Control "no-cache,no-store,must-revalidate";
        add_header X-Accel-Buffering no;
        proxy_buffering off;
        proxy_intercept_errors on;

        error_page 404 /404.html;
        proxy_read_timeout 500s;
        proxy_connect_timeout 500s;

        proxy_pass http://127.0.0.1:8002/api/;
    }
    
    location ~ ^/witchaind(.*)$ {
        # 提取路径后缀
        set $path_suffix $1;
        
        # 转发请求到本地服务，保留路径结构和查询参数
        proxy_pass http://127.0.0.1:9888/witchaind$path_suffix$is_args$args;
        
        # HTTP/1.1 支持
        proxy_http_version 1.1;
        
        # 确保传递Content-Type头部
        proxy_set_header Content-Type $content_type;
        
        # 添加Content-Length头部，解决POST请求体丢失问题
        proxy_set_header Content-Length $content_length;
        
        # 代理请求头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 正确设置Upgrade和Connection头部
        set $connection_upgrade $http_upgrade;
        if ($http_upgrade) {
            set $connection_upgrade "upgrade";
        }
        proxy_set_header Connection $connection_upgrade;
        
        # 增加请求体大小限制
        client_max_body_size 20m;
        
        # 优化代理缓冲设置
        proxy_buffering off;  # 对于POST请求可能更好
        
        # 请求和响应超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 跨域设置
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        
        # 处理 OPTIONS 请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain charset=UTF-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    error_page 401 402 403 405 406 407 413 414 /error.html;
    error_page 404 /404.html;
    error_page 500 501 502 503 504 505 /error.html;

    location = /404 {
        return 404;
    }

    location = /404.html {
        root /usr/share/euler-copilot-web;
        internal;
    }

    location = /error.html {
        root /usr/share/euler-copilot-web;
        internal;
    }

    location /assets/ {
        alias /usr/share/euler-copilot-web/assets/;
        expires 30d;
        add_header Cache-Control public;
    }
}