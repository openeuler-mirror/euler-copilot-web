worker_processes auto;
worker_rlimit_nofile 4096;
error_log /dev/stderr info;
pid /var/lib/nginx/tmp/nginx.pid;

include /usr/share/nginx/modules/*.conf;

events {
    use epoll;
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout main;

    autoindex off;
    server_tokens off;

    port_in_redirect off;
    absolute_redirect off;

    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;
    client_body_buffer_size 65M;
    client_max_body_size 65M;

    client_header_timeout 15s;
    client_body_timeout 15s;
    client_body_in_file_only off;

    keepalive_timeout 500s;
    send_timeout 25s;

    limit_conn_zone $binary_remote_addr zone=limitperip:10m;
    limit_req_zone $binary_remote_addr zone=ratelimit:10m rate=1000r/s;

    proxy_hide_header X-Powered-By;
    proxy_request_buffering off;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_comp_level 5;
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript application/x-httpd-php application/json;
    gzip_vary on;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 8080 default_server;
        server_name localhost;
        charset utf-8;

        add_header 'Access-Control-Allow-Origin' '*'; # 允许所有源
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE'; # 允许的HTTP方法
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization'; # 允许的请求头
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range'; # 允许前端访问的响应头

        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;
        add_header Referrer-Policy "no-referrer";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; always";
        add_header Cache-Control "no-cache";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src * data: base64;";
       
        limit_conn limitperip 50;
        resolver 8.8.8.8 8.8.4.4 valid=60s;
        resolver_timeout 5s;

        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE)$) {
            return 444;
        }

        location ~ /\. {
            deny all;
            return 404;
        }
   
        location / {
            limit_req zone=ratelimit burst=50 nodelay;
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            if (!-e $request_filename){
                return 404;
            }
        }
        
        location /login {
            limit_req zone=ratelimit burst=50 nodelay;
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        location /api/health_check {
            deny all;
            return 404;
        }

        location /api/ {
            proxy_set_header X-Forwarded-For $http_x_real_ip;
            add_header Cache-Control "no-cache,no-store,must-revalidate";
            add_header X-Accel-Buffering no;
            proxy_buffering off;
            proxy_intercept_errors on;
            
            error_page 404 /404.html;
            limit_req zone=ratelimit burst=15 nodelay;   
            proxy_read_timeout 500s;
            proxy_connect_timeout 500s;

            proxy_pass ${FRAMEWORK_URL}/api/;
        }


        location /wtd/ {
            proxy_set_header X-Forwarded-For $http_x_real_ip;
            add_header Cache-Control "no-cache,no-store,must-revalidate";
            add_header X-Accel-Buffering no;
            proxy_buffering off;
            proxy_intercept_errors on;
            
            error_page 404 /404.html;
            limit_req zone=ratelimit burst=15 nodelay;   
            proxy_read_timeout 500s;
            proxy_connect_timeout 500s;

            proxy_pass ${FRAMEWORK_URL}/witchaind/;
        }
        
        location /witchaind/ {
            proxy_set_header X-Forwarded-For $http_x_real_ip;
            add_header X-Accel-Buffering no;
            proxy_buffering off;
            proxy_intercept_errors on;
            
            error_page 404 /404.html;
            proxy_read_timeout 500s;
            proxy_connect_timeout 500s;

            proxy_pass ${RAG_WEB_URL}/witchaind/;
        }

        error_page 401 402 403 405 406 407 413 414 /error.html;
        error_page 404 /404.html;
        error_page 500 501 502 503 504 505 /error.html;

        location = /404 {
            return 404;
        }
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        location = /error.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}