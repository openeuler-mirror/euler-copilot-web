export default {
  common: {
    confirm: 'Confirm',
    cancel: 'Cancel',
    close: 'Close',
    add: 'Add {name}',
    edit: 'Edit {name}',
    delete: 'Delete',
    search: 'Search',
    null: 'No data available.',
    createTime: 'Create Time',
    operate: 'Operation',
    copy: 'Copy',
    icon: 'Icon',
    tip: 'Tip',
    delete_success: 'Deleted successfully.',
    clear_search: 'Clear search',
    no_data: 'No Data',
    characters: 'characters',
    setting: '设置',
    reply: 'Reply',
  },
  settings: {
    model: 'Model',
    setting: 'Settings',
    model_setting: 'Models',
    api_key_management: 'API Key',
    added_model: 'Added Models',
    model_provider: 'Providers',
    select_model: 'Model',
    new_api_key: 'New API Key',
    secret_key: 'Secret Key',
    secret_key_desc: 'Description',
    confirm_to_delete: 'Are you sure you want to delete this model?',
    placeHolder: {
      url: 'URL',
      api_key: 'Enter the API key.',
      model_name: 'Enter the model.',
      max_token: 'Enter the maximum number of tokens.',
    },
    model_preferences_settings: 'Model Preferences Settings',
    reasoning_model_preference: 'Reasoning Model Preference',
    embedding_model_preference: 'Embedding Model Preference',
    reranker_preference: 'Reranker Preference',
    chain_of_thought_preference: 'Chain of Thought Preference',
  },
  home: {
    name: 'openEuler Intelligence',
  },
  //tabs: {
    //work: 'Work',
    //private: 'Private',
    //collect: 'Collect',
    //like: 'Like',
  //},
  menu: {
    dialogue: 'Chats',//前端整体统一使用Chat，infotip和错误信息酌情使用conversation，全局不使用dialog
    plugin_center: 'Plugin Center',
    app_center: 'App Center',
    sql: 'WitChainD',//WitChainD全局统一首字母大写
    settings: 'Settings',
  },
  semantic: {
    close: 'Close',
    semantic_interface: 'Semantic Interfaces',//tab名使用复数Semantic Interfaces，Create Plugin下拉选项使用单数Semantic Interface，需新增一个词条
    max_select_mcp_server: 'Select up to {num} MCP services.',//前端MCP统一用service，后端调用使用server
    mcp_service: 'MCP Services',
    create_plugin: 'Create Plugin',
    semantic_interface_center: 'Semantic Interface Center',
    all_select: 'All',
    interface_name: 'Interface Name',
    interface_introduction: 'Interface Introduction',
    username: 'Username',
    interface_search: 'Search',
    interface_upload: 'Upload',
    //all_interface: 'All interface',
    my_upload: 'My Uploads',
    my_favorite: 'My Favorites',
    interface_edit: 'Edit',
    interface_delete: 'Delete',
    no_data: 'No data available.',
    upload_semantic_interface: 'Upload Interface',
    edit_semantic_interface: 'Edit Interface',
    view_semantic_interface: 'View Interface',
    choose_file: 'Select File',
    tip1: 'Drag a file here or click Select File.',
    tip2: 'Format: YAML; Size < 2 MB',
    interface_path: 'Interface Path',
    interface_description: 'Interface Description',
    cancel: 'Cancel',
    submit: 'Submit',
    edit: 'Edit',
    analyze: 'Parse',
    pleaseEnter: 'Please enter.',
    save: 'Save',
    publish_condition: 'Debug all workflows in the application successfully before publishing it.',
    icon: 'Icon',
    baseMessage: 'Basic Info',
    preview: 'Preview',
    publish: 'Publish',
    copyFailed: 'Copy failed.',
    checkFormat: 'Check the format.',
    check_connect: 'Please check the connecting cable.',
    component_name: 'component name',
    component_introduction: 'component introduction',
    selectedModel: 'select model',
    key: 'key',
    value: 'value',
    rag_query_variables: 'query'
  },
  plugin_center: {
    plugin_name: 'Plugin Name',
    author: 'Author',
    mcp: {
      installing: 'Installing',
      install_failed: 'Install Failed',
      create_mcp: 'Create MCP',
      edit_mcp: 'Edit MCP',
      mcp_name: 'MCP Name',
      mcp_overview: 'MCP Overview',
      mcp_description: 'MCP Description',
      mcp_type: 'MCP Type',
      activate: 'Activate',
      deactivate: 'Deactivate',
      install: 'Install',
      install_success: 'Install Success',
      not_installed: 'Not Installed',
      cancel: 'Cancel',
      all_select: 'All',
      installed: 'Installed',
      not_active: 'Not Active', 
      active: 'Active',
      active_mcp_service: 'Active MCP Service',
    },
    upload_icon: 'Upload Icon',
    please_upload_icon: 'Upload an icon.',
    please_input_mcp_name: 'Enter an MCP name.',
    please_input_mcp_overview: 'Enter an MCP overview.',
    please_select_mcp_description: 'Enter an MCP description.',
    server_detail: 'Service Details',
    server_tool: 'Service Tools',
    server_description: 'Service Description',
    tool_input_schema: 'Tool Input Schema',
    tool_output_schema: 'Tool Output Schema',
    confirm_delete_interface: 'Are you sure you want to delete this interface?',
    confirm_delete_server: 'Are you sure you want to delete this service?',
    no_brief_description_yet: 'No description available.',
  },
  app: {
    app_center: 'App Center',
    flow: 'Workflow',
    agent: 'Agent',
    all_select: 'All',
    app_name: 'App Name',
    app_introduction: 'App Introduction',
    username: 'Username',
    app_search: 'Search',
    app_create: 'Create App',
    all_app: 'All',
    my_created: 'My Creations',
    my_favorite: 'My Favorites',
    app_edit: 'Edit',
    app_delete: 'Delete',
    no_data: 'No data available.',
    upload_app: 'Upload App',
    //edit_app: 'Edit App',
    //view_app: 'View App',
    cancel: 'Cancel',
    submit: 'Confirm',
    edit: 'Edit',
    analyze: 'Parse',
    unpublished: 'Unpublished',
    publishSuccess: 'Published successfully.',
    publishFailed: 'Publish failed.',
    create_app: 'Create App',
    app_published: 'Published',
    app_config: 'App Config',
    workflow_app: 'Create Workflow App',
    mcp_app: 'Create Agent App',
    create_mcp_app: 'Create MCP App',
    create_workflow_app: 'Create Workflow App',
    mcp_app_desc: 'Build plugin/Agent apps to quickly create personal AI assistants',
    workflow_app_desc: 'Create drag-and-drop workflow apps to craft production-grade AI solutions',
    confirm_delete_app: 'Are you sure you want to delete this APP?',
    create_or_edit_workflow_first: 'Create/Edit a workflow first.',
    ui_preview: 'UI Preview',
    appName: 'Agent Name',
    appName_input: 'Enter an agent name.',
    appDescription: 'Agent Description',
    appDescription_input: 'Enter an agent description.',
    modelSelected: 'Model',
    modelSelected_input: 'Select a model.',
    multi_Dialogue: 'Multi-turn Conversation',
    multi_Dialogue_select: 'Number of Turns',
    ability_Configuration: 'Capabilities',
    MCPService: 'MCP Services',
    MCPService_add: 'Add MCP Service',
    permissionConfiguration: 'Permissions',
    permission: 'Permissions',
    permission_public: 'Public (visible to all)',
    permission_private: 'Private (visible only to me)',
    somePeople: 'Custom (visible to selected users)',
    updateSuccessfully: 'Updated successfully.',
    pleasemodifyTheName: 'The workflow name already exists. Modify the name and try again.',
    deleteWorkflowSuccessfully: 'Workflow deleted successfully.',
    createSuccessfully: 'Created successfully.',
    //successfully: 'Done.',
    //failed: 'Failed.',
    inputContent: 'Input',
    outputContent: 'Output',
    link: 'Related Links',
    addLink: 'Add Link',
    addFiveLinks: 'Add up to 5 links.',
    optional: 'Available',
    searchUser: 'Search for users.',
    selected: 'Selected',
  },
  main: {
    start: 'Start',
    end: 'End',
    describe1: "Hi! I'm",
    describe2: ", and I'm happy to be of service.",
    left_describe: 'Popular Apps',
    os_knowledge: 'CVE Hotfix Assistant',
    os_knowledge_describe: 'CVE hotfix',
    openEuler_expertise: 'Diagnostics Assistant',
    openEuler_expertise_describe: 'Intelligent diagnostics',
    beyond_openEuler: 'Tuning Assistant',
    beyond_openEuler_describe: 'Intelligent tuning',
    openEuler_use_cases: 'Container Stack Assistant',
    openEuler_use_cases_describe: 'AI container stack assistant',
    question: 'Suggested Questions',
    addQuestion: 'Add Question',
    addFiveQuestions: 'Add up to 5 questions.',
    //smart_shell_describe: '欢迎探索首款自然语言交互的智能操作系统：一句话，即享智能诊断与优化',
    try_app: 'Access App Center',
    refresh: 'Refresh',
    //query_interpretation: '请选择识别方式',
    //Automatic: '自动识别',
    ask_me_anything: 'Ask me anything about openEuler. Press Shift+Enter to start a new line.',
    //you_might_want_to_know: 'You might want to know: ',
    close: 'Close',
    confirm: 'Confirm',
    email1: 'Email: ',
    email2: 'contact@openeuler.io',
    opinions: 'AI-generated responses are provided for reference only and do not reflect the opinions of openEuler.',
    service_agreement: 'Service Agreement',
    privacy_policy: 'Privacy Policy',
    contact_us: 'Contact Us',
    version: 'Version 0.10.0-Beta',
  },
  history: {
    new_conversation: 'New Chat',
    new_chat: 'New Chat',
    latestConversation: 'This is the latest conversation.',
    recent_chats: 'Recent Chats',
    delete_chats: 'Delete Chats',
    find_recent_chats: 'Find recent chats.',
    rename: 'Rename',
    delete: 'Delete', 
    delete_successfully: 'Deleted successfully.',
    delete_failed: 'Delete failed.',
    cancel: 'Cancel',
    select_all: 'Select All',
    confirmation_message: 'Delete Chat',
    confirmation_message1: 'Tip',
    confirmation_content1: 'The selected',
    confirmation_content2: 'chats will be deleted.',
    delete_content1: 'This chat',
    delete_content2: 'will be deleted.',
    ok: 'OK',
    chat_history_limit1: 'You can view up to',
    chat_history_limit2: 'of your most recent chats.',
    time_filter_today: 'Today',
    time_filter_last_7_days: 'Last 7 days',
    time_filter_last_30_days: 'Last 30 days',
    time_filter_last_6_months: 'Last 6 months',
    links: 'Links',
    hiss_basic_software_service_capability_platform: 'HiSS Basic Software Service Capability Platform', 
    collapse: 'Collapse',
    no_chat_history: 'No chat history available.',
    expand: 'Expand',
    myApp: 'My Apps',
    auto_execute: 'Auto Execute',
  },
  feedback: {
    noCopyMessage: 'No information to copy.',
    feedbackSuccesful: 'Feedback sent. Thank you!',
    regenerate: 'Regenerate',
    try_ask_me: 'Try ask me: ',
    eulercopilot_is_thinking: 'openEuler Intelligence is thinking...',
    generation_stopped: 'Response stopped.',
    stop: 'Stop',
    stopSuccessful: 'Paused',
    systemBusy: 'The system is busy. Please try again later.',
    onlySupport: "I'm sorry, but for now, we only support questions related to openEuler and Linux.",
    copy: 'Copy',
    copied_successfully: 'Copied successfully.',
    copied_failed: 'Copy failed.',
    edit_successful: 'Edited successfully.',
    edit_failed: 'Edit failed.',
    good_answer: 'Good Answer',
    bad_answer: 'Bad Answer',
    your_feedback_helps_us_improve: 'Your feedback helps us improve.',
    the_information_is_inappropriate_or_illegal: 'The information is inappropriate or illegal.',
    the_answer_is_not_helpful: 'The answer is not helpful.',
    i_found_an_error: 'I found an error.',
    enter_the_link_to_the_correct_answer: 'Enter the URL to the correct answer.',
    describe_the_error: 'Describe the error.',
    submit: 'Submit',
    report: 'Report',
    reason_for_reporting: 'Reason for Reporting',
    enter_a_description_for_your_report: 'Enter a description for your report.',
  },
  Report: {
    pornographic_content: 'Pornographic content',
    account_violation: 'Account violation',
    politically_sensitive_content: 'Political content',
    violence_or_terrorism: 'Violence or terrorism',
    defamation_or_rumor_spreading: 'Defamation or misinformation',
    insult_to_heroes_or_martyrs: 'Insult to heroes or martyrs',
    spam: 'Spam',
    ethnic_or_religious_incitement: 'Ethnic or religious incitement',
    disturbing_content: 'Disturbing content',
    abuse_or_harassment: 'Abuse or harassment',
    gambling_or_fraud: 'Gambling or fraud',
    consumer_manipulation: 'Misleading promotions',
    harm_to_minors: 'Harm to minors',
    illegal_or_prohibited_items: 'Illegal or prohibited items',
    other_violations: 'Other',
  },
  Login: {
    login: 'Log In',
    logout: 'Log Out',
    //login_now: '立即登录',
    //account: '账号',
    //enter_account: '请输入账号',
    //password: '密码',
    //enter_password: '请输入密码',
    //incorrect_password: '密码输入有误',
    //api_key_management: 'API key management',
    //no_api_key_available: '暂无可用的 API Key',
    //create_api_key: '新建 API Key',
    //api_key_display_once: '此 API Key 只展示一次，请复制后妥善保存。',
    revoke: 'Revoke', 
    refresh: 'Refresh',
    unauthorized: 'Unauthorized page. Please log in first.',
  },
  question: {
    open_euler_community_edition_categories: 'What are the categories of openEuler community distributions?',
    lts_release_cycle_and_support:
      'What is the release cycle and community support duration for openEuler LTS versions?',
    innovation_release_cycle_and_support:
      'What is the release cycle and community support duration for openEuler innovation versions?',
    container_cloud_platform_solution:
      'What is the Container Cloud Platform Solution (CCPS) of the openEuler community?',
    sec_gear_main_functions: 'What are the three main capabilities of secGear?',
    dde_description: 'What is the DDE component?',
    open_euler_pkgship: 'What is pkgship in openEuler?',
  },
  upload: {
    upload_tip_text:
      'Maximum 10 files, 64 MB in total. Formats: PDF, DOCX, DOC, TXT, MD, XLSX',
    uploading: 'Uploading...',
    upload_fail: 'Upload failed.',
    resolving: 'Parsing...',
    resolve_fail: 'Parsing failed.',
    error_type_msg: 'Upload failed: File type not supported.',
    error_size_msg: 'Upload failed: File count or size exceeds the upper limit.',
    error_name_msg: 'Upload failed: Duplicate file name exits.',
    aside_session_file_count_front: '',
    aside_session_file_count_back: 'files',
    quote_front: 'Quote',
    quote_back: 'pieces of knowledge base materials',
    reference_source: 'Reference source',
  },
  apikey: {
    save_apikey: 'This API key is displayed only once. Please copy and keep it secure.',
    no_apikey: 'No available API key.',
    create_apikey: 'New API Key',
    cancel: 'Cancel',
  },
  witChainD: {
    witChainD: 'WitChainD',
    witChainD_id: 'ID',
    describe_the_witChainD: 'Enter a WitChainD ID.',
    find_witChainD: 'Enter a WitChainD name or ID.',
    knowledge: 'Knowledge Base',
    fiveKnowledge: 'Select up to 5 knowledge bases.',
  },
  // API Call Drawer specific translations
  apiCall: {
    basic_info: 'Basic Information',
    request_headers: 'Request Headers',
    query_params: 'Query Parameters',
    request_body: 'Request Body',
    output_variables: 'Output Variables',
    node_name_placeholder: 'Enter node name',
    node_description_placeholder: 'Enter node description',
    api_url_placeholder: 'Enter API address',
    key_placeholder: 'Enter key',
    value_placeholder: 'Enter value',
    json_body_placeholder: 'Enter JSON format request body',
    url_validation_message: 'URL must start with http:// or https://',
    add_header: 'Add Header',
    add_query_param: 'Add Query Parameter',
    add_form_data: 'Add Form Data',
    add_multipart_data: 'Add Data',
  },
  // LLM Node Drawer specific translations
  llmNode: {
    basic_info: 'Basic Information',
    prompt_config: 'Prompt Configuration',
    parameter_config: 'Parameter Configuration',
    output_variables: 'Output Variables',
    node_name_placeholder: 'Enter node name',
    node_description_placeholder: 'Enter node description',
    model_placeholder: 'Please select model',
    system_prompt_label: 'System Prompt',
    system_prompt_placeholder: 'Enter system prompt',
    user_prompt_label: 'User Prompt',
    user_prompt_placeholder: 'Enter user prompt',
    question_label: 'Question',
    question_placeholder: 'Enter question',
    temperature_label: 'Temperature',
    context_label: 'Context',
    frequency_penalty_label: 'Frequency Penalty',
  },
  // MCP Node Drawer specific translations
  mcpNode: {
    basic_info: 'Basic Information',
    output_variables: 'Output Variables',
    node_name_placeholder: 'Enter node name',
    node_description_placeholder: 'Enter node description',
    mcp_tools_label: 'MCP Tools',
    mcp_tools_placeholder: 'Please select MCP tools',
    max_steps_label: 'Max Steps',
    query_mcp_service_failed: 'Failed to query MCP services',
  },
  // RAG Node Drawer specific translations
  ragNode: {
    basic_info: 'Basic Information',
    knowledge_config: 'Knowledge Base Configuration',
    advanced_options: 'Advanced Options',
    output_variables: 'Output Variables',
    node_name_placeholder: 'Enter node name',
    node_description_placeholder: 'Enter node description',
    query_placeholder: 'Enter question to query knowledge base',
    knowledge_base_label: 'Knowledge Base',
    knowledge_base_placeholder: 'Please select knowledge base',
    search_method_label: 'Search Method',
    search_method_placeholder: 'Please select search method',
    is_rerank_label: 'Enable Rerank',
    is_compress_label: 'Enable Compression',
    is_classify_by_doc_label: 'Classify by Document',
    is_related_surrounding_label: 'Related Context',
    keyword_search: 'Keyword Search',
    vector_search: 'Vector Search',
    hybrid_search: 'Hybrid Search',
    doc2chunk_search: 'Document Chunk Search',
    doc2chunk_bfs_search: 'Document Chunk Search (BFS)',
    enhanced_by_llm_search: 'LLM Enhanced Search',
    query_knowledge_base_failed: 'Failed to query knowledge base',
    no_knowledge_base_available: 'No knowledge base available',
  },
  flow: {
    flow_start: 'Workflow in progress',
    flow_end: 'Workflow completed.',
    flow_cancel: 'Cancel running',
    flow_risk: 'Risk statement',
    flow_params_error: 'Parameter missing',
    flow_pause: 'Workflow paused',
    edit_flow: 'Edit',
    edit_workflow: 'Edit Workflow',
    flow_name: 'Workflow Name',
    flow_description: 'Workflow Description',
    create_flow: 'Create Workflow',
    step_configuration: 'Step Configuration',
    debug_after_connection: 'Connect to a node before debugging.',
    no_flow: 'No workflow available.',
    choose_flow: 'Select a workflow.',
    debug: 'Debug',
    enterWorkflowName: 'Enter a workflow name.',
    enterWorkflowDesc: 'Enter a workflow Description.',
    default: '',
    success: 'Workflow succeeded',
    error: 'Workflow failed',
    running: 'Running',
    pending: 'Running',
    result: 'Result',
    input: 'Input',
    output: 'Output',
    params: 'Parameters',
    supplementaryParameters: 'Additional Parameters',
    parameterConfiguration: 'Parameter Configuration',
    additionalNotes: 'Additional notes',
    nodes: 'Nodes',
    plugins: 'Plugins',
    node_names: {
      start: 'Start',
      end: 'End',
      loop: 'Loop',
      choice: 'Choice',
      variable_assign: 'Variable Assignment',
      file_extractor: 'File Extractor',
      skip_round: 'Skip Round',
      exit_loop: 'Exit Loop',
      loop_subflow: 'Loop Subflow',
      loop_condition: 'Loop Condition',
    },
    // File Extractor Configuration
    file_extractor: {
      title: 'Configure File Extractor',
      basic_info: 'Basic Information',
      node_name: 'Node Name',
      node_name_placeholder: 'Enter node name',
      node_description: 'Node Description',
      node_description_placeholder: 'Enter node description',
      input_variables: 'Input Variables',
      parse_method: 'Parse Method',
      parse_method_placeholder: 'Select file parsing method',
      parse_method_description: 'Extract text content from files, supports parsing of various file formats',
      input_file: 'Input File',
      supported_file_types: 'Supported file types: {types}',
      select_file_variable: 'Select file variable',
      select_file_or_array_variable: 'Select file or file array variable',
      output_variables: 'Output Variables',
      variable_name: 'Variable Name',
      type: 'Type',
      description: 'Description',
      text_output_description: 'Extracted text content',
      error_output_description: 'Error message (if any)',
      string_type: 'String',
      cancel: 'Cancel',
      save: 'Save',
      // Validation messages
      node_name_required: 'Please enter node name',
      parse_method_required: 'Please select file parsing method',
      input_file_required: 'Please select input file variable',
      // Error messages
      load_parse_methods_failed: 'Failed to load parse method list',
    },
    node_groups: {
      tool: 'Tools',
      transform: 'Transform',
      logic: 'Logic',
      default: 'Default',
    },
    node_config: {
      basic_info: 'Basic Information',
      node_name: 'Node Name',
      node_name_placeholder: 'Enter node name',
      node_name_required: 'Please enter node name',
      node_description: 'Node Description',
      node_description_placeholder: 'Enter node description',
      security_level: 'Security Level',
      security_level_placeholder: 'Select security level',
      security_level_low: 'Low Security Level (Fast Execution)',
      security_level_high: 'High Security Level (Complete Isolation)',
      variable_management: 'Variable Management',
      loop_settings: 'Loop Settings',
      loop_variables: 'Loop Variables',
      add_variable: 'Add Variable',
      input_variable_name: 'Input variable name',
      select_type: 'Select type',
      type_string: 'String',
      type_number: 'Number',
      type_boolean: 'Boolean',
      type_object: 'Object',
      type_list: 'Array',
      type_reference: 'Reference Variable',
      select_reference_variable: 'Select variable to reference',
      input_string_value: 'Enter string value',
      input_number_value: 'Enter number value',
      select_boolean_value: 'Select boolean value',
      input_json_object: 'Enter JSON formatted object',
      delete_variable: 'Delete variable',
      loop_stop_condition: 'Loop Stop Condition',
      add_stop_condition: 'Add Stop Condition',
      max_iterations: 'Maximum Iterations',
      duplicate_variable_name: 'Variable names cannot be duplicated',
      loop_node_save_success: 'Loop node saved successfully',
      no_input_variables: 'No input variables',
      no_output_variables: 'No output variables',
      input_variables_tip: 'Select variables as code input parameters',
      output_variables_tip: 'These variables will be created after code execution',
      input_variables: 'Input Variables',
      output_variables: 'Output Variables',
      variable_placeholder: 'Enter variable name in node',
      loop_variable_scope: 'Loop Variables',
      output_variables_tip_code: 'Output variables should be defined in code return value',
      execution_config: 'Execution Configuration',
      timeout_seconds: 'Timeout',
      memory_limit: 'Memory Limit',
      cpu_limit: 'CPU Limit',
      seconds: 'seconds',
      mb: 'MB',
      cores: 'cores',
      code_editor: 'Code Editor',
      at_least_one_operation: 'At least one variable operation must be retained',
      operation_select_variable: 'Operation {index}: Please select variable',
      operation_select_type: 'Operation {index}: Please select operation type',
      operation_input_value: 'Operation {index}: Please input operation value',
      variable_operations: 'Variable Operations',
      add_operation: 'Add Operation',
      variable_assign_config: 'Variable Assignment Node Configuration',
    },
    answer: 'Answer',
    file_variables: 'File Variables',
    single_file: 'Single File',
    multiple_files: 'Multiple Files',
    remove_file_variable: 'Remove File Variable',
    file_variable_exists: 'File variable {name} already exists, no need to add again',
    variable_format: 'Variable: {{name}}',
    env_config: 'Environment Variable Configuration',
    env_description_title: 'Environment Variable Description',
    env_description_content: 'Environment variables are bound to the current workflow and can only be read during workflow execution, not modified. Suitable for storing configuration information, keys, constants, etc.',
    env_list: 'Environment Variable List',
    no_env_variables: 'No environment variables',
    create_first_env_variable: 'Click "Add Variable" button to create your first environment variable',
    edit_env_variable: 'Edit Environment Variable',
    add_env_variable: 'Add Environment Variable',
    variable_name: 'Variable Name',
    variable_name_placeholder: 'Enter variable name (letters, numbers, underscores supported)',
    variable_type: 'Variable Type',
    select_variable_type: 'Select variable type',
    type_string_desc: 'String (string)',
    type_number_desc: 'Number (number)',
    type_boolean_desc: 'Boolean (boolean)',
    type_object_desc: 'JSON Object (object)',
    variable_value: 'Variable Value',
    input_string_placeholder: 'Enter string value',
    input_number_placeholder: 'Enter number value',
    select_boolean_placeholder: 'Select boolean value',
    input_json_placeholder: 'Enter JSON formatted object',
    description: 'Description',
    variable_description_placeholder: 'Enter variable description (optional)',
    variable_name_required: 'Please enter variable name',
    variable_name_pattern: 'Variable name can only contain letters, numbers and underscores, and cannot start with a number',
    variable_type_required: 'Please select variable type',
    variable_value_required: 'Please enter variable value',
    not_set: 'Not set',
    hidden: 'Hidden',
    load_env_variables_failed: 'Failed to load environment variables',
    json_format_error: 'JSON format is incorrect, please check input',
    env_variable_update_success: 'Environment variable updated successfully',
    env_variable_create_success: 'Environment variable created successfully',
    env_variable_update_failed: 'Failed to update environment variable',
    env_variable_create_failed: 'Failed to create environment variable',
    confirm_delete_env_variable: 'Are you sure you want to delete environment variable "{name}"? This operation cannot be undone.',
    confirm_delete_title: 'Confirm Delete',
    env_variable_delete_success: 'Environment variable deleted successfully',
    env_variable_delete_failed: 'Failed to delete environment variable',
    language: 'Language',
    insert_template: 'Insert Template',
    format_code: 'Format',
    fullscreen: 'Fullscreen',
    exit_fullscreen: 'Exit Fullscreen',
    navigate_to: 'Navigate to...',
    template_inserted: 'Template inserted',
    code_formatted: 'Code formatted',
    code_copied: 'Code copied to clipboard',
    copy_failed: 'Copy failed, please copy manually',
    fullscreen_exit_tip: 'Press ESC or F11 to exit fullscreen mode',
    code_main_function: 'Code execution main function',
    input_variables_dict: 'Input variables dictionary',
    output_variables_dict: 'Output variables dictionary',
    get_input_variables: 'Get input variables',
    example_get_variable: 'Example: value = kwargs.get(\'input_variable_name\', default_value)',
    write_python_code_here: 'Write your Python code here',
    define_output_variables: 'Define output variables',
    input_variables_object: 'Input variables object',
    output_variables_object: 'Output variables object',
    example_js_get_variable: 'Example: const value = variables.input_variable_name || default_value;',
    write_js_code_here: 'Write your JavaScript code here',
    shell_input_env_vars: 'Input variables passed via environment variables: INPUT_VARIABLE_NAME',
    shell_output_json: 'Output variables printed to stdout in JSON format',
    example_shell_get_variable: 'Example: local value="${INPUT_VARIABLE_NAME:-default_value}"',
    write_bash_code_here: 'Write your Bash code here',
    output_json_result: 'Output JSON format result',
    call_main_function: 'Call main function',
  },
  pagination: {
    prev: 'Previous',
    next: 'Next',
  },
  zoom: {
    reduce: 'Zoom Out',
    amplify: 'Zoom In',
    adaptive: 'Fit to Screen',
    scaleTo50: 'Zoom to 50%',
    scaleTo100: 'Zoom to 100%',
    scaleTo150: 'Zoom to 150%',
    scaleTo200: 'Zoom to 200%',
  },
  yaml: {
    else: 'else',
    if: 'if',
    else_if: 'else if',
    please_select: 'Please select',
    please_select_condition: 'Please select the condition.',
    parameter_value: 'Input or reference parameter value',
    add_conditional_branches: 'Add conditional branches',
    del_branch: 'Remove Branch',
    add_condition: 'Add Condition',
    del_condition: 'Remove Condition',
    and: 'and',
    or: 'or',
    add: 'Add',
    input_type_error: 'Input type error',
    please_improve_the_conditions: 'Please improve the conditions.',
  },
  opertion: {
    api: 'HTTP request',
    mcp: 'MCP',
    sql: 'SQL query',
    gcraph: 'Chart',
    llm: 'Large model',
    rag: 'Knowledge base',
    suggestion: 'Question recommendation',
    skip_round: 'Skip Round',
    exit_loop: 'Exit Loop',
    variable_assign: 'Variable Assignment',
    file_extract: 'File Extractor',
    equal: 'Equal',
    not_equal: 'Not equal',
    contains: 'Contains',
    does_not_contain: 'Does not contain',
    starts_with: 'Starts with',
    ends_with: 'Ends with',
    length_equal: 'Length equal',
    length_greater_than: 'Length greater than',
    length_greater_than_or_equal: 'Length greater than or equal',
    length_less_than: 'Length less than',
    length_less_than_or_equal: 'Length less than or equal',
    regex_match: 'Regex match',
    greater_than: 'Greater than',
    less_than: 'Less than',
    greater_than_or_equal: 'Greater than or equal',
    less_than_or_equal: 'Less than or equal',
    contains_key: 'Contains key',
    does_not_contain_key: 'Does not contain key',
    // Complete operator mappings (with type prefix)
    string_equal: 'Equal',
    string_not_equal: 'Not equal',
    string_contains: 'Contains',
    string_not_contains: 'Does not contain',
    string_starts_with: 'Starts with',
    string_ends_with: 'Ends with',
    string_length_equal: 'Length equal',
    string_length_greater_than: 'Length greater than',
    string_length_greater_than_or_equal: 'Length greater than or equal',
    string_length_less_than: 'Length less than',
    string_length_less_than_or_equal: 'Length less than or equal',
    string_regex_match: 'Regex match',
    number_equal: 'Equal',
    number_not_equal: 'Not equal',
    number_greater_than: 'Greater than',
    number_greater_than_or_equal: 'Greater than or equal',
    number_less_than: 'Less than',
    number_less_than_or_equal: 'Less than or equal',
    bool_equal: 'Equal',
    bool_not_equal: 'Not equal',
    dict_equal: 'Equal',
    dict_not_equal: 'Not equal',
    dict_contains_key: 'Contains key',
    dict_not_contains_key: 'Does not contain key',
    // Variable operation type mappings
    overwrite: 'Overwrite',
    clear: 'Clear',
    add: 'Add',
    subtract: 'Subtract',
    multiply: 'Multiply',
    divide: 'Divide',
    modulo: 'Modulo',
    power: 'Power',
    sqrt: 'Square root',
    append: 'Append',
    extend: 'Extend',
    pop_first: 'Remove first',
    pop_last: 'Remove last',
  },
  nodeVariableConfig: {
    variable_config: 'Variable Configuration',
    variable_syntax_tooltip: 'Use variable syntax like {{system.query}} to reference variables',
    custom_fields: 'Custom Fields',
    field_name_placeholder: 'Field Name',
    field_value_placeholder: 'Field Value (supports variable references)',
    add_custom_field: 'Add Custom Field',
    // LLM node configuration
    llm: {
      system_prompt_label: 'System Prompt',
      system_prompt_placeholder: 'Enter system prompt, variables like {{system.query}} can be used',
      system_prompt_tooltip: 'Define AI assistant role and behavior, supports variable references',
      user_prompt_label: 'User Prompt',
      user_prompt_placeholder: 'Enter user prompt template',
      user_prompt_tooltip: 'User input template, usually contains user query variables',
      api_key_label: 'API Key',
      api_key_placeholder: 'Select API key variable',
      api_key_tooltip: 'API key for calling LLM service',
      temperature_label: 'Temperature',
      temperature_placeholder: '0.7',
      temperature_tooltip: 'Control randomness of generated text, range 0-1',
      max_tokens_label: 'Max Tokens',
      max_tokens_placeholder: '2048',
      max_tokens_tooltip: 'Limit maximum length of generated content'
    },
    // Condition node configuration
    condition: {
      condition_expression_label: 'Condition Expression',
      condition_expression_placeholder: 'e.g.: {{score}} > 0.8',
      condition_expression_tooltip: 'Supports JavaScript expressions, variables can be used for conditional judgment',
      true_branch_label: 'When True',
      true_branch_placeholder: 'Next node ID',
      true_branch_tooltip: 'Node to jump to when condition is true',
      false_branch_label: 'When False',
      false_branch_placeholder: 'Next node ID',
      false_branch_tooltip: 'Node to jump to when condition is false'
    },
    // Variable assignment node configuration
    variable_assignment: {
      target_variable_label: 'Target Variable',
      target_variable_placeholder: 'Variable Name',
      target_variable_tooltip: 'Name of the variable to assign',
      source_expression_label: 'Assignment Expression',
      source_expression_placeholder: '{{system.query}} + " processed"',
      source_expression_tooltip: 'Supports variable references and simple expressions',
      variable_type_label: 'Variable Type',
      variable_type_tooltip: 'Data type of the new variable',
      type_string: 'String',
      type_number: 'Number',
      type_boolean: 'Boolean',
      type_object: 'Object'
    },
    // HTTP request node configuration
    http_request: {
      url_label: 'Request URL',
      url_placeholder: 'https://api.example.com/data',
      url_tooltip: 'Target address for HTTP request',
      method_label: 'Request Method',
      method_tooltip: 'HTTP request method',
      headers_label: 'Request Headers',
      headers_placeholder: '{"Content-Type": "application/json"}',
      headers_tooltip: 'HTTP request headers, supports variable references',
      body_label: 'Request Body',
      body_placeholder: '{"query": "{{system.query}}"}',
      body_tooltip: 'Request body content, supports variable references'
    }
  },
  startNodeEditor: {
    title: 'Edit Start Node',
    basic_config: 'Basic Configuration',
    variable_management: 'Variable Management',
    node_description: 'Node Description',
    node_description_placeholder: 'Enter node description',
    input_parameters: 'Input Parameters',
    output_parameters: 'Output Parameters',
    parameter_value_placeholder: 'Enter parameter value',
    add_input_parameter: 'Add Input Parameter',
    add_output_parameter: 'Add Output Parameter',
    delete: 'Delete',
    save: 'Save',
    cancel: 'Cancel',
    loading: 'Initializing...',
    no_conversation: 'Conversation ID is required to manage variables',
    // Messages
    messages: {
      init_form_failed: 'Failed to initialize form data',
      load_variables_failed: 'Failed to load conversation variables',
      editor_not_initialized: 'Editor not fully initialized, please try again later',
      save_success: 'Saved successfully',
      save_failed: 'Save failed, please check your input',
      variables_updated: 'Variables updated',
      update_variables_failed: 'Failed to update variables',
      init_editor_failed: 'Failed to initialize editor',
      update_form_failed: 'Failed to update form data',
      component_init_failed: 'Component initialization failed'
    }
  },
  startNodeVariableManager: {
    // Tabs
    system_variables: 'System Variables',
    conversation_variables: 'Conversation Variables',
    input_fields: 'Input Fields',
    input_fields_hint: 'Configured inputs can be used in the workflow',
    no_variables: 'No Variables',
    // Dialog titles
    edit_variable: 'Edit Variable',
    add_variable_dialog: 'Add Variable',
    // Form labels
    variable_name_label: 'Variable Name',
    variable_type_label: 'Variable Type',
    variable_value_label: 'Variable Value',
    description_label: 'Description',
    supported_file_types_label: 'Supported File Types',
    // Variable type groups
    basic_types: 'Basic Types',
    array_types: 'Array Types',
    // Basic type options
    string_type: 'String',
    number_type: 'Number',
    boolean_type: 'Boolean',
    object_type: 'Object',
    secret_type: 'Secret',
    file_type: 'File',
    // Array type options
    array_any: 'Array[Any]',
    array_string: 'Array[String]',
    array_number: 'Array[Number]',
    array_object: 'Array[Object]',
    array_file: 'Array[File]',
    array_boolean: 'Array[Boolean]',
    array_secret: 'Array[Secret]',
    // File type categories
    document_category: 'Document',
    image_category: 'Image',
    audio_category: 'Audio',
    video_category: 'Video',
    other_file_types: 'Other File Types',
    // Upload related
    upload_file_types: 'Upload File Types',
    local_upload: 'Local Upload',
    url_upload: 'URL Upload',
    file_upload_limits: 'File Upload Limits',
    max_files: 'Max Files:',
    max_file_size: 'Max File Size:',
    required_file: 'Required File:',
    file_type_fixed: 'File type is fixed to 1 file',
    // Placeholder texts
    enter_variable_name: 'Enter variable name',
    select_variable_type: 'Select variable type',
    enter_string_value: 'Enter string value',
    enter_number_value: 'Enter number value',
    select_boolean_value: 'Select boolean value',
    enter_secret_value: 'Enter secret value',
    enter_json_object: 'Enter JSON format object value',
    enter_variable_description: 'Enter variable description (optional)',
    file_extension_placeholder: '+ + file extension, e.g. .doc',
    // Tip messages
    file_type_tip: 'File type variables will be uploaded by users during conversation',
    string_array_tip: 'String array variables will be input by users during conversation, default is empty array',
    number_array_tip: 'Number array variables will be input by users during conversation, default is empty array',
    boolean_array_tip: 'Boolean array variables will be selected by users during conversation, default is empty array',
    file_array_tip: 'File list type variables will be uploaded by users during conversation, default is empty array',
    object_array_tip: 'Object array variables will be input by users in JSON format during conversation, default is empty array',
    secret_array_tip: 'Secret array variables will be input by users during conversation, default is empty array',
    any_array_tip: 'Any type array variables will be input by users during conversation, default is empty array',
    required_file_note: 'When checked, users must upload files during conversation',
    // Button texts
    cancel: 'Cancel',
    delete: 'Delete',
    save: 'Save',
    // Unit text
    mb_unit: 'MB',
    // Validation rules
    enter_variable_name_validation: 'Please enter variable name',
    variable_name_pattern_validation: 'Variable name can only contain letters, numbers and underscores, and must start with a letter or underscore',
    select_variable_type_validation: 'Please select variable type',
    // Error messages
    missing_variable_data: 'Missing variable data',
    missing_flow_id: 'Missing workflow ID (flowId), unable to save conversation variable',
    variable_name_empty: 'Variable name cannot be empty',
    select_variable_type_required: 'Please select variable type',
    enter_valid_number: 'Please enter a valid number',
    json_format_incorrect: 'JSON format is incorrect, please check object value syntax',
    variable_update_success: 'Variable updated successfully',
    variable_create_success: 'Variable created successfully',
    variable_delete_success: 'Variable deleted successfully',
    save_variable_failed: 'Failed to save variable',
    delete_variable_failed: 'Failed to delete variable',
    load_variables_failed: 'Failed to load variables',
    description_save_success: 'Description saved successfully',
    description_save_failed: 'Failed to save description',
    save_success: 'Saved successfully',
    // Other labels
    not_set: '(Not set)',
    // System variables related
    system_readonly: 'System Variables (Read-only)',
    system_description: 'These variables are automatically provided by the system and contain context information for the current workflow execution',
    available_system_variables: 'Available System Variables',
    // Conversation variables related
    conversation_description: 'These variables are valid in the current conversation and can be used in various steps of the workflow',
    add_variable: 'Add Variable',
    // Table column headers
    variable_name: 'Variable Name',
    type: 'Type',
    description: 'Description',
    value: 'Value',
    reference_syntax: 'Reference Syntax',
    operations: 'Operations',
    // System variable descriptions
    system_var_descriptions: {
      query: 'Current user query content',
      files: 'List of files uploaded by user',
      dialogue_count: 'Current conversation round count',
      app_id: 'Current application ID',
      flow_id: 'Current workflow ID',
      user_id: 'Current user ID',
      session_id: 'Current session ID',
      timestamp: 'Current timestamp',
      default: 'System variable'
    },
    // Variable types
    variable_types: {
      string: 'String',
      number: 'Number',
      boolean: 'Boolean',
      object: 'Object',
      secret: 'Secret',
      group: 'Group',
      file: 'File',
      'array[any]': 'Any Array',
      'array[string]': 'String Array',
      'array[number]': 'Number Array',
      'array[object]': 'Object Array',
      'array[file]': 'File Array',
      'array[boolean]': 'Boolean Array',
      'array[secret]': 'Secret Array'
    },
    // Empty state
    no_conversation_variables: 'No conversation variables',
    empty_hint: 'Click the "Add Variable" button above to create your first conversation variable',
    // Dialog
    add_conversation_variable: 'Add Conversation Variable',
    // Placeholders
    placeholders: {
      variable_name: 'Enter variable name (e.g., user_name)',
      select_variable_type: 'Select variable type',
      variable_value: 'Enter variable value',
      boolean_value: 'Select boolean value',
      json_object: 'Enter JSON format object',
      string_array: 'Enter comma-separated strings, e.g., item1,item2,item3',
      json_array: 'Enter JSON array format, e.g., [1,2,3] or [{},{}]',
      file_default: 'Optional: Enter default value or description',
      description: 'Enter variable description (optional)'
    },
    // Confirm delete
    confirm_delete: 'Are you sure you want to delete this variable?',
    // Validation rules
    validation: {
      name_required: 'Please enter variable name',
      name_pattern: 'Variable name can only contain letters, numbers and underscores, and cannot start with a number',
      type_required: 'Please select variable type',
      value_required: 'Please enter variable value'
    },
    // Messages
    messages: {
      system_variables_loaded: 'System variables loaded successfully',
      load_system_variables_failed: 'Failed to load system variables',
      load_conversation_variables_failed: 'Failed to load conversation variables',
      load_variable_types_failed: 'Failed to load variable types',
      invalid_number: 'Please enter a valid number',
      invalid_json: 'Please enter valid JSON format',
      invalid_number_array: 'Please enter a valid number array, e.g., [1,2,3]',
      invalid_boolean_array: 'Please enter a valid boolean array, e.g., [true,false]',
      invalid_object_array: 'Please enter a valid object array',
      variable_created: 'Variable created successfully',
      create_variable_failed: 'Failed to create variable',
      variable_deleted: 'Variable deleted successfully',
      delete_variable_failed: 'Failed to delete variable'
    }
  },
  variableChooser: {
    // Labels
    variable_name_label: 'Variable Name:',
    select_variable_label: 'Select Variable:',
    source_variable_label: 'Source Variable:',
    type_label: 'Type:',
    scope_label: 'Scope:',
    description_label: 'Description:',
    // Buttons and actions
    clear_variable_selection: 'Clear variable selection',
    // Placeholders
    enter_variable_name: 'Enter variable name',
    select_variable: 'Select variable',
    // Variable types
    variable_types: {
      string: 'String',
      number: 'Number',
      boolean: 'Boolean',
      object: 'Object',
      secret: 'Secret',
      file: 'File',
      'array[any]': 'Array',
      'array[string]': 'String Array',
      'array[number]': 'Number Array',
      'array[object]': 'Object Array',
      'array[file]': 'File Array',
      'array[boolean]': 'Boolean Array',
      'array[secret]': 'Secret Array'
    },
    // Scopes
    scopes: {
      system: 'System Variables',
      user: 'User Variables',
      env: 'Environment Variables',
      conversation: 'Conversation Variables'
    },
    // Description templates
    current_node_variable: 'Current node variable: {name}',
    conversation_variable: 'Conversation variable: {name}',
    scope_variable: '{scope} variable: {name}',
    // Error messages
    find_variable_failed: 'Failed to find variable:',
    variable_detail_query_failed: 'Variable detail query failed, using default info:'
  },
  variableInsertDropdown: {
    // Titles and labels
    select_variable_to_insert: 'Select variable to insert',
    search_variables_placeholder: 'Search variables...',
    searching: 'Searching...',
    // Empty states
    no_variables_found: 'No matching variables found',
    no_available_variables: 'No available variables',
    ensure_variables_defined: 'Please ensure variables are defined in relevant scopes'
  },
  variableSelector: {
    // Placeholders
    select_variable: 'Select variable',
    search_variables_placeholder: 'Search variables...',
    // Scope labels
    scopes: {
      self: 'Current Node Variables',
      system: 'System Variables',
      user: 'User Variables',
      env: 'Environment Variables',
      conversation: 'Conversation Variables'
    },
    // Variable types
    variable_types: {
      string: 'String',
      number: 'Number',
      boolean: 'Boolean',
      object: 'Object',
      secret: 'Secret',
      file: 'File',
      'array[any]': 'Array',
      'array[string]': 'String Array',
      'array[number]': 'Number Array',
      'array[object]': 'Object Array',
      'array[file]': 'File Array',
      'array[boolean]': 'Boolean Array',
      'array[secret]': 'Secret Array'
    },
    // Template text
    node_output: 'Node {nodeName} Output',
    // Empty states
    no_available_variables: 'No available variables',
    define_variables_hint: 'You can define conversation variables in the start node',
    // Console messages
    loading_variables: 'VariableSelector loading variables, current parameters:',
    conversation_variables_query: 'Conversation variables query with current_step_id:',
    variables_loaded_result: 'Variables loading result:',
    variables_load_failed: 'Variables loading failed:',
    variables_loading_complete: 'VariableSelector variables loading complete:',
    total_count: 'Total',
    system_variables_count: 'System Variables',
    user_variables_count: 'User Variables',
    env_variables_count: 'Environment Variables',
    conversation_variables_count: 'Conversation Variables',
    predecessor_variables_count: 'Predecessor Variables',
    variables_load_error: 'Variables loading failed:',
    api_path_check: 'Suggestion: Check if API path is correct and backend service is running',
    flow_id_check: 'Suggestion: Check if flowId parameter is passed correctly',
    load_variable_types_failed: 'Failed to load variable types:'
  },
  contextMenu: {
    add_node: 'Add Node',
    add_comment: 'Add Comment',
    debug_workflow: 'Debug',
    export_yaml: 'Export YAML',
    import_yaml: 'Import YAML',
  },
  choiceBranch: {
    // Basic information
    basic_info: 'Basic Information',
    node_name: 'Node Name',
    node_description: 'Node Description',
    branch_config: 'Branch Configuration',
    // Branch types
    branch_types: {
      if: 'IF',
      elif: 'ELIF',
      else: 'ELSE'
    },
    // Data types
    data_types: {
      string: 'String',
      number: 'Number',
      list: 'Array',
      bool: 'Boolean',
      dict: 'Object',
      reference: 'Variable Reference'
    },
    // Operators
    operators: {
      // String operators
      string_equal: 'Equals',
      string_not_equal: 'Not Equals',
      string_contains: 'Contains',
      string_not_contains: 'Not Contains',
      string_starts_with: 'Starts With',
      string_ends_with: 'Ends With',
      string_length_equal: 'Length Equals',
      string_length_greater_than: 'Length Greater Than',
      string_length_greater_than_or_equal: 'Length Greater Than or Equal',
      string_length_less_than: 'Length Less Than',
      string_length_less_than_or_equal: 'Length Less Than or Equal',
      string_regex_match: 'Regex Match',
      // Number operators
      number_equal: 'Equals',
      number_not_equal: 'Not Equals',
      number_greater_than: 'Greater Than',
      number_less_than: 'Less Than',
      number_greater_than_or_equal: 'Greater Than or Equal',
      number_less_than_or_equal: 'Less Than or Equal',
      // List operators
      list_equal: 'Equals',
      list_not_equal: 'Not Equals',
      list_contains: 'Contains',
      list_not_contains: 'Not Contains',
      list_length_equal: 'Length Equals',
      list_length_greater_than: 'Length Greater Than',
      list_length_greater_than_or_equal: 'Length Greater Than or Equal',
      list_length_less_than: 'Length Less Than',
      list_length_less_than_or_equal: 'Length Less Than or Equal',
      // Boolean operators
      bool_equal: 'Equals',
      bool_not_equal: 'Not Equals',
      // Dictionary operators
      dict_equal: 'Equals',
      dict_not_equal: 'Not Equals',
      dict_contains_key: 'Contains Key',
      dict_not_contains_key: 'Not Contains Key',
      // Generic operators (simplified)
      eq: 'Equals',
      ne: 'Not Equals',
      gt: 'Greater Than',
      gte: 'Greater Than or Equal',
      lt: 'Less Than',
      lte: 'Less Than or Equal',
      contains: 'Contains',
      not_contains: 'Not Contains',
      starts_with: 'Starts With',
      ends_with: 'Ends With',
      is_empty: 'Is Empty',
      is_not_empty: 'Is Not Empty',
      length_eq: 'Length Equals',
      length_gt: 'Length Greater Than',
      length_lt: 'Length Less Than',
      has_key: 'Has Key',
      not_has_key: 'Not Has Key'
    },
    // Logic operators
    logic_operators: {
      and: 'AND',
      or: 'OR',
      and_text: 'AND',
      or_text: 'OR'
    },
    // Placeholders
    placeholders: {
      enter_node_name: 'Enter node name',
      enter_node_description: 'Enter node description',
      select_left_variable: 'Select left variable',
      select_right_variable: 'Select right variable',
      data_type: 'Type',
      operator: 'Operator',
      select_boolean: 'Select boolean',
      enter_value: 'Enter {type}',
      enter_generic_value: 'value'
    },
    // Button text
    buttons: {
      variable_reference: 'Variable Reference',
      input_value: 'Input Value',
      add_condition: 'Add Condition',
      delete_branch: 'Delete Branch',
      add_elif: 'ELIF',
      cancel: 'Cancel',
      save: 'Save'
    },
    // Titles and labels
    titles: {
      config_condition_branch: 'Configure Condition Branch',
      case_number: 'CASE {number}',
      condition_branch: 'Condition Branch',
      delete_condition: 'Delete Condition',
      selected_branch_id: 'Selected Branch ID'
    },
    // Tips
    tips: {
      else_description: 'Used to define the branch executed when IF/ELIF conditions are not met',
      click_edit_add_branch: 'Click edit to add branch conditions',
      other_cases: 'All other cases'
    },
    // Validation and error messages
    validation: {
      enter_node_name: 'Please enter node name',
      need_at_least_one_branch: 'At least one branch is required',
      branch_missing_left_variable: '{branchName} branch has unfilled left variable',
      branch_missing_right_value: '{branchName} branch has unfilled right value',
      branch_missing_operator: '{branchName} branch has unselected operator',
      need_valid_branch: 'At least one valid branch is required',
      condition_cannot_delete: 'Condition cannot be deleted',
      each_branch_need_condition: 'Each branch needs at least one condition',
      keep_at_least_one_branch: 'At least one conditional branch must be kept',
      confirm_delete_branch: 'Are you sure you want to delete this branch?',
      confirm_delete_title: 'Confirm Delete',
      data_error_multiple_default: 'Data error: Cannot have multiple default branches'
    },
    // Status display
    status: {
      condition_not_set: 'Condition not set',
      no_condition: 'Condition not set',
      branch_prefix: 'Branch'
    },
    // Console messages
    console: {
      init_form_data: 'Initialize form data - original choices:',
      branch_separation_result: 'Branch separation result:',
      non_default_branch: 'Non-default branch',
      found_multiple_default: 'Found multiple default branches, keeping only the first:',
      has_non_default_branch: 'Has non-default branches, updating names',
      no_non_default_branch: 'No non-default branches, creating empty IF branch',
      no_default_branch: 'No default branch, creating ELSE branch',
      has_default_branch: 'Has default branch:',
      final_form_data: 'Final formData:',
      save_final_data: 'Save final data:',
      operator_mapping_not_found: 'Operator mapping not found:'
    }
  }
};