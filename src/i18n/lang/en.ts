export default {
  common: {
    confirm: 'Confirm',
    cancel: 'Cancel',
    close: 'Close',
    add: 'Add {name}',
    edit: 'Edit {name}',
    delete: 'Delete',
    search: 'Search',
    null: 'No data available.',
    createTime: 'Create Time',
    operate: 'Operation',
    copy: 'Copy',
    icon: 'Icon',
    tip: 'Tip',
    delete_success: 'Deleted successfully.',
  },
  settings: {
    model: 'Model',
    setting: 'Settings',
    model_setting: 'Models',
    api_key_management: 'API Key',
    added_model: 'Added Models',
    model_provider: 'Providers',
    select_model: 'Model',
    new_api_key: 'New API Key',
    secret_key: 'Secret Key',
    secret_key_desc: 'Description',
    confirm_to_delete: 'Are you sure you want to delete this model?',
    placeHolder: {
      url: 'URL',
      api_key: 'Enter the API key.',
      model_name: 'Enter the model.',
      max_token: 'Enter the maximum number of tokens.',
    },
  },
  home: {
    name: 'openEuler Intelligence',
  },
  //tabs: {
    //work: 'Work',
    //private: 'Private',
    //collect: 'Collect',
    //like: 'Like',
  //},
  menu: {
    dialogue: 'Chats',//前端整体统一使用Chat，infotip和错误信息酌情使用conversation，全局不使用dialog
    plugin_center: 'Plugin Center',
    app_center: 'App Center',
    sql: 'WitChainD',//WitChainD全局统一首字母大写
    settings: 'Settings',
  },
  semantic: {
    close: 'Close',
    semantic_interface: 'Semantic Interfaces',//tab名使用复数Semantic Interfaces，Create Plugin下拉选项使用单数Semantic Interface，需新增一个词条
    max_select_mcp_server: 'Select up to {num} MCP services.',//前端MCP统一用service，后端调用使用server
    mcp_service: 'MCP Services',
    create_plugin: 'Create Plugin',
    semantic_interface_center: 'Semantic Interface Center',
    all_select: 'All',
    interface_name: 'Interface Name',
    interface_introduction: 'Interface Introduction',
    username: 'Username',
    interface_search: 'Search',
    interface_upload: 'Upload',
    //all_interface: 'All interface',
    my_upload: 'My Uploads',
    my_favorite: 'My Favorites',
    interface_edit: 'Edit',
    interface_delete: 'Delete',
    no_data: 'No data available.',
    upload_semantic_interface: 'Upload Interface',
    edit_semantic_interface: 'Edit Interface',
    view_semantic_interface: 'View Interface',
    choose_file: 'Select File',
    tip1: 'Drag a file here or click Select File.',
    tip2: 'Format: YAML; Size < 2 MB',
    interface_path: 'Interface Path',
    interface_description: 'Interface Description',
    cancel: 'Cancel',
    submit: 'Submit',
    edit: 'Edit',
    analyze: 'Parse',
    pleaseEnter: 'Please enter.',
    save: 'Save',
    publish_condition: 'Debug all workflows in the application successfully before publishing it.',
    icon: 'Icon',
    baseMessage: 'Basic Info',
    preview: 'Preview',
    publish: 'Publish',
    copyFailed: 'Copy failed.',
    checkFormat: 'Check the format.',
    check_connect: 'Please check the connecting cable.',
  },
  plugin_center: {
    plugin_name: 'Plugin Name',
    author: 'Author',
    mcp: {
      installing: 'Installing',
      install_failed: 'Install Failed',
      create_mcp: 'Create MCP',
      edit_mcp: 'Edit MCP',
      mcp_name: 'MCP Name',
      mcp_overview: 'MCP Overview',
      mcp_description: 'MCP Description',
      mcp_type: 'MCP Type',
      activate: 'Activate',
      deactivate: 'Deactivate',
      install: 'Install',
      install_success: 'Install Success',
      not_installed: 'Not Installed',
      cancel: 'Cancel',
      all_select: 'All',
      installed: 'Installed',
      not_active: 'Not Active', 
      active: 'Active',
      active_mcp_service: 'Active MCP Service',
    },
    upload_icon: 'Upload Icon',
    please_upload_icon: 'Upload an icon.',
    please_input_mcp_name: 'Enter an MCP name.',
    please_input_mcp_overview: 'Enter an MCP overview.',
    please_select_mcp_description: 'Enter an MCP description.',
    server_detail: 'Service Details',
    server_tool: 'Service Tools',
    server_description: 'Service Description',
    tool_input_schema: 'Tool Input Schema',
    tool_output_schema: 'Tool Output Schema',
    confirm_delete_interface: 'Are you sure you want to delete this interface?',
    confirm_delete_server: 'Are you sure you want to delete this service?',
    no_brief_description_yet: 'No description available.',
  },
  app: {
    app_center: 'App Center',
    flow: 'Workflow',
    agent: 'Agent',
    all_select: 'All',
    app_name: 'App Name',
    app_introduction: 'App Introduction',
    username: 'Username',
    app_search: 'Search',
    app_create: 'Create App',
    all_app: 'All',
    my_created: 'My Creations',
    my_favorite: 'My Favorites',
    app_edit: 'Edit',
    app_delete: 'Delete',
    no_data: 'No data available.',
    upload_app: 'Upload App',
    //edit_app: 'Edit App',
    //view_app: 'View App',
    cancel: 'Cancel',
    submit: 'Confirm',
    edit: 'Edit',
    analyze: 'Parse',
    unpublished: 'Unpublished',
    publishSuccess: 'Published successfully.',
    publishFailed: 'Publish failed.',
    create_app: 'Create App',
    app_published: 'Published',
    app_config: 'App Config',
    workflow_app: 'Create Workflow App',
    mcp_app: 'Create Agent App',
    create_mcp_app: 'Create MCP App',
    create_workflow_app: 'Create Workflow App',
    mcp_app_desc: 'Build plugin/Agent apps to quickly create personal AI assistants',
    workflow_app_desc: 'Create drag-and-drop workflow apps to craft production-grade AI solutions',
    confirm_delete_app: 'Are you sure you want to delete this APP?',
    create_or_edit_workflow_first: 'Create/Edit a workflow first.',
    ui_preview: 'UI Preview',
    appName: 'Agent Name',
    appName_input: 'Enter an agent name.',
    appDescription: 'Agent Description',
    appDescription_input: 'Enter an agent description.',
    modelSelected: 'Model',
    modelSelected_input: 'Select a model.',
    multi_Dialogue: 'Multi-turn Conversation',
    multi_Dialogue_select: 'Number of Turns',
    ability_Configuration: 'Capabilities',
    MCPService: 'MCP Services',
    MCPService_add: 'Add MCP Service',
    permissionConfiguration: 'Permissions',
    permission: 'Permissions',
    permission_public: 'Public (visible to all)',
    permission_private: 'Private (visible only to me)',
    somePeople: 'Custom (visible to selected users)',
    updateSuccessfully: 'Updated successfully.',
    pleasemodifyTheName: 'The workflow name already exists. Modify the name and try again.',
    deleteWorkflowSuccessfully: 'Workflow deleted successfully.',
    createSuccessfully: 'Created successfully.',
    //successfully: 'Done.',
    //failed: 'Failed.',
    inputContent: 'Input',
    outputContent: 'Output',
    link: 'Related Links',
    addLink: 'Add Link',
    addFiveLinks: 'Add up to 5 links.',
    optional: 'Available',
    searchUser: 'Search for users.',
    selected: 'Selected',
  },
  main: {
    start: 'Start',
    end: 'End',
    describe1: "Hi! I'm",
    describe2: ", and I'm happy to be of service.",
    left_describe: 'Popular Apps',
    os_knowledge: 'CVE Hotfix Assistant',
    os_knowledge_describe: 'CVE hotfix',
    openEuler_expertise: 'Diagnostics Assistant',
    openEuler_expertise_describe: 'Intelligent diagnostics',
    beyond_openEuler: 'Tuning Assistant',
    beyond_openEuler_describe: 'Intelligent tuning',
    openEuler_use_cases: 'Container Stack Assistant',
    openEuler_use_cases_describe: 'AI container stack assistant',
    question: 'Suggested Questions',
    addQuestion: 'Add Question',
    addFiveQuestions: 'Add up to 5 questions.',
    //smart_shell_describe: '欢迎探索首款自然语言交互的智能操作系统：一句话，即享智能诊断与优化',
    try_app: 'Access App Center',
    refresh: 'Refresh',
    //query_interpretation: '请选择识别方式',
    //Automatic: '自动识别',
    ask_me_anything: 'Ask me anything about openEuler. Press Shift+Enter to start a new line.',
    //you_might_want_to_know: 'You might want to know: ',
    close: 'Close',
    confirm: 'Confirm',
    email1: 'Email: ',
    email2: 'contact@openeuler.io',
    opinions: 'AI-generated responses are provided for reference only and do not reflect the opinions of openEuler.',
    service_agreement: 'Service Agreement',
    privacy_policy: 'Privacy Policy',
    contact_us: 'Contact Us',
    version: 'Version 0.10.0-Beta',
  },
  history: {
    new_conversation: 'New Chat',
    new_chat: 'New Chat',
    latestConversation: 'This is the latest conversation.',
    recent_chats: 'Recent Chats',
    delete_chats: 'Delete Chats',
    find_recent_chats: 'Find recent chats.',
    rename: 'Rename',
    delete: 'Delete', 
    delete_successfully: 'Deleted successfully.',
    delete_failed: 'Delete failed.',
    cancel: 'Cancel',
    select_all: 'Select All',
    confirmation_message: 'Delete Chat',
    confirmation_message1: 'Tip',
    confirmation_content1: 'The selected',
    confirmation_content2: 'chats will be deleted.',
    delete_content1: 'This chat',
    delete_content2: 'will be deleted.',
    ok: 'OK',
    chat_history_limit1: 'You can view up to',
    chat_history_limit2: 'of your most recent chats.',
    time_filter_today: 'Today',
    time_filter_last_7_days: 'Last 7 days',
    time_filter_last_30_days: 'Last 30 days',
    time_filter_last_6_months: 'Last 6 months',
    links: 'Links',
    hiss_basic_software_service_capability_platform: 'HiSS Basic Software Service Capability Platform', 
    collapse: 'Collapse',
    no_chat_history: 'No chat history available.',
    expand: 'Expand',
    myApp: 'My Apps',
    auto_execute: 'Auto Execute',
  },
  feedback: {
    noCopyMessage: 'No information to copy.',
    feedbackSuccesful: 'Feedback sent. Thank you!',
    regenerate: 'Regenerate',
    try_ask_me: 'Try ask me: ',
    eulercopilot_is_thinking: 'openEuler Intelligence is thinking...',
    generation_stopped: 'Response stopped.',
    stop: 'Stop',
    stopSuccessful: 'Paused',
    systemBusy: 'The system is busy. Please try again later.',
    onlySupport: "I'm sorry, but for now, we only support questions related to openEuler and Linux.",
    copy: 'Copy',
    copied_successfully: 'Copied successfully.',
    copied_failed: 'Copy failed.',
    edit_successful: 'Edited successfully.',
    edit_failed: 'Edit failed.',
    good_answer: 'Good Answer',
    bad_answer: 'Bad Answer',
    your_feedback_helps_us_improve: 'Your feedback helps us improve.',
    the_information_is_inappropriate_or_illegal: 'The information is inappropriate or illegal.',
    the_answer_is_not_helpful: 'The answer is not helpful.',
    i_found_an_error: 'I found an error.',
    enter_the_link_to_the_correct_answer: 'Enter the URL to the correct answer.',
    describe_the_error: 'Describe the error.',
    submit: 'Submit',
    report: 'Report',
    reason_for_reporting: 'Reason for Reporting',
    enter_a_description_for_your_report: 'Enter a description for your report.',
  },
  Report: {
    pornographic_content: 'Pornographic content',
    account_violation: 'Account violation',
    politically_sensitive_content: 'Political content',
    violence_or_terrorism: 'Violence or terrorism',
    defamation_or_rumor_spreading: 'Defamation or misinformation',
    insult_to_heroes_or_martyrs: 'Insult to heroes or martyrs',
    spam: 'Spam',
    ethnic_or_religious_incitement: 'Ethnic or religious incitement',
    disturbing_content: 'Disturbing content',
    abuse_or_harassment: 'Abuse or harassment',
    gambling_or_fraud: 'Gambling or fraud',
    consumer_manipulation: 'Misleading promotions',
    harm_to_minors: 'Harm to minors',
    illegal_or_prohibited_items: 'Illegal or prohibited items',
    other_violations: 'Other',
  },
  Login: {
    login: 'Log In',
    logout: 'Log Out',
    //login_now: '立即登录',
    //account: '账号',
    //enter_account: '请输入账号',
    //password: '密码',
    //enter_password: '请输入密码',
    //incorrect_password: '密码输入有误',
    //api_key_management: 'API key management',
    //no_api_key_available: '暂无可用的 API Key',
    //create_api_key: '新建 API Key',
    //api_key_display_once: '此 API Key 只展示一次，请复制后妥善保存。',
    revoke: 'Revoke', 
    refresh: 'Refresh',
    unauthorized: 'Unauthorized page. Please log in first.',
  },
  question: {
    open_euler_community_edition_categories: 'What are the categories of openEuler community distributions?',
    lts_release_cycle_and_support:
      'What is the release cycle and community support duration for openEuler LTS versions?',
    innovation_release_cycle_and_support:
      'What is the release cycle and community support duration for openEuler innovation versions?',
    container_cloud_platform_solution:
      'What is the Container Cloud Platform Solution (CCPS) of the openEuler community?',
    sec_gear_main_functions: 'What are the three main capabilities of secGear?',
    dde_description: 'What is the DDE component?',
    open_euler_pkgship: 'What is pkgship in openEuler?',
  },
  upload: {
    upload_tip_text:
      'Maximum 10 files, 64 MB in total. Formats: PDF, DOCX, DOC, TXT, MD, XLSX',
    uploading: 'Uploading...',
    upload_fail: 'Upload failed.',
    resolving: 'Parsing...',
    resolve_fail: 'Parsing failed.',
    error_type_msg: 'Upload failed: File type not supported.',
    error_size_msg: 'Upload failed: File count or size exceeds the upper limit.',
    error_name_msg: 'Upload failed: Duplicate file name exits.',
    aside_session_file_count_front: '',
    aside_session_file_count_back: 'files',
    quote_front: 'Quote',
    quote_back: 'pieces of knowledge base materials',
    reference_source: 'Reference source',
  },
  apikey: {
    save_apikey: 'This API key is displayed only once. Please copy and keep it secure.',
    no_apikey: 'No available API key.',
    create_apikey: 'New API Key',
    cancel: 'Cancel',
  },
  witChainD: {
    witChainD: 'WitChainD',
    witChainD_id: 'ID',
    describe_the_witChainD: 'Enter a WitChainD ID.',
    find_witChainD: 'Enter a WitChainD name or ID.',
    knowledge: 'Knowledge Base',
    fiveKnowledge: 'Select up to 5 knowledge bases.',
  },
  flow: {
    flow_start: 'Workflow in progress',
    flow_end: 'Workflow completed.',
    flow_cancel: 'Cancel running',
    flow_risk: 'Risk statement',
    flow_params_error: 'Parameter missing',
    flow_pause: 'Workflow paused',
    edit_flow: 'Edit',
    edit_workflow: 'Edit Workflow',
    flow_name: 'Workflow Name',
    flow_description: 'Workflow Description',
    create_flow: 'Create Workflow',
    step_configuration: 'Step Configuration',
    debug_after_connection: 'Connect to a node before debugging.',
    no_flow: 'No workflow available.',
    choose_flow: 'Select a workflow.',
    debug: 'Debug',
    enterWorkflowName: 'Enter a workflow name.',
    enterWorkflowDesc: 'Enter a workflow Description.',
    default: '',
    success: 'Workflow succeeded',
    error: 'Workflow failed',
    running: 'Running',
    pending: 'Running',
    result: 'Result',
    input: 'Input',
    output: 'Output',
    params: 'Parameters',
    supplementaryParameters: 'Additional Parameters',
    parameterConfiguration: 'Parameter Configuration',
    additionalNotes: 'Additional notes',
  },
  pagination: {
    prev: 'Previous',
    next: 'Next',
  },
  zoom: {
    reduce: 'Zoom Out',
    amplify: 'Zoom In',
    adaptive: 'Fit to Screen',
    scaleTo50: 'Zoom to 50%',
    scaleTo100: 'Zoom to 100%',
    scaleTo150: 'Zoom to 150%',
    scaleTo200: 'Zoom to 200%',
  },
  yaml: {
    else: 'else',
    if: 'if',
    else_if: 'else if',
    please_select: 'Please select',
    please_select_condition: 'Please select the condition.',
    parameter_value: 'Input or reference parameter value',
    add_conditional_branches: 'Add conditional branches',
    and: 'and',
    or: 'or',
    add: 'Add',
    input_type_error: 'Input type error',
    please_improve_the_conditions: 'Please improve the conditions.',
  },
  opertion: {
    api: 'HTTP request',
    mcp: 'MCP',
    sql: 'SQL query',
    gcraph: 'Chart',
    llm: 'Large model',
    rag: 'Knowledge base',
    suggestion: 'Question recommendation',
    skip_round: 'Skip Round',
    exit_loop: 'Exit Loop',
    variable_assign: 'Variable Assignment',
    file_extract: 'File Extractor',
    equal: 'Equal',
    not_equal: 'Not equal',
    contains: 'Contains',
    does_not_contain: 'Does not contain',
    starts_with: 'Starts with',
    ends_with: 'Ends with',
    length_equal: 'Length equal',
    length_greater_than: 'Length greater than',
    length_greater_than_or_equal: 'Length greater than or equal',
    length_less_than: 'Length less than',
    length_less_than_or_equal: 'Length less than or equal',
    regex_match: 'Regex match',
    greater_than: 'Greater than',
    less_than: 'Less than',
    greater_than_or_equal: 'Greater than or equal',
    less_than_or_equal: 'Less than or equal',
    contains_key: 'Contains key',
    does_not_contain_key: 'Does not contain key',
  }
};