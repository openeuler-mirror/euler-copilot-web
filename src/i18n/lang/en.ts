export default {
    home: {
      name: 'EulerCopilot',
    },
    tabs: {
      work: 'Work',
      private: 'Private',
      collect: 'Collect',
      like: 'Like',
    },
    main: {
      question:"Recommended Questions",
      describe1:"Hi! I'm",
      describe2:", and I'm happy to be of service.",
      left_describe:"Feel free to ask me, your AI assistant, about any of these topics, or anything else that's on your mind!~",
      os_knowledge:'General OS Knowledge',
      os_knowledge_describe:'I can answer your questions about Linux, upstream communities, and toolchains.',
      openEuler_expertise:'openEuler Expertise',
      openEuler_expertise_describe:'Ask me anything about the openEuler community, technical details, or how to use openEuler.',
      beyond_openEuler:'Beyond openEuler',
      beyond_openEuler_describe:'I can also provide information about openEuler-compatible hardware, ISVs, and OSVs.',
      openEuler_use_cases:'openEuler Use Cases',
      openEuler_use_cases_describe:'Discover how openEuler is used in various technical and industry applications.',
      command_generation:'Command Generation',
      command_generation_describe:'Need help crafting the perfect shell command? I can generate single or complex commands for you.',
      smart_shell:'Smart Shell',
      smart_shell_describe:'Experience the future of OSs with our smart shell! Use natural language to diagnose and optimize your system.',
      try_now:'Try Now',
      refresh:"Refresh",
      query_interpretation:"Query Interpretation",
      Automatic:"Automatic",
      ask_me_anything:"Ask me anything about openEuler. Press Shift+Enter to start a new line.",
      you_might_want_to_know:"You might want to know:",
      close:"Close",
      email1:"Email:",
      email2:"contact@openeuler.io",
      opinions:"AI-generated responses are for reference only and do not reflect the opinions of openEuler.",
      service_agreement:"Service Agreement",
      privacy_policy:"Privacy Policy",
      contact_us:"Contact Us",
      version:"Version 1.0.0"
    },
    history:{
      new_chat: "New Chat",  
      latestConversation:"This is the latest conversation",
      recent_chats: "Recent Chats",  
      delete_chats: "Delete Chats",  
      find_recent_chats: "Find recent chats.",  
      rename: "Rename",  
      delete: "Delete", // 注意：这个字段可能与批量删除操作冲突，具体取决于应用逻辑  
      delete_successfully: "Delete successfully",  
      delete_failed: "Delete failed",  
      cancel: "Cancel",  
      confirmation_message:"Delete Chats?",
      confirmation_message1: "Tip",  
      select_all: "Select All",  
      confirmation_content1: "The selected ",  
      confirmation_content2: " chats will be deleted.",
      delete_content1:"This chat",  
      delete_content2:"will be deleted.",  
      ok: "OK",  
      chat_history_limit: "You can view up to 200 of your most recent chats.",  
      time_filter_today: "Today",  
      time_filter_last_7_days: "Last 7 days",  
      time_filter_last_30_days: "Last 30 days",  
      time_filter_last_6_months: "Last 6 months",  
      links: "Links",  
      hiss_basic_software_service_capability_platform: "HiSS Basic Software Service Capability Platform", // 注意：这里我保留了原始的大小写，但通常我们会将首字母大写  
      collapse: "Collapse",  
      no_chat_history: "No chat history available.", // 假设需要一个字段来表示没有历史对话的情况  
      expand: "Expand", // 假设界面中有展开历史对话的功能
    },
    feedback:{
      feedbackSuccesful:"Feedback succeeded.",
      regenerate: "Regenerate", // 这里我保留了原样，因为通常键名不加双引号  
      try_ask_me: "Try ask me:",  
      eulercopilot_is_thinking: "EulerCopilot is thinking…",  
      generation_stopped: "Generation stopped.",  
      stop: "Stop",  
      stopSuccessful: "Stop Successfully", 
      systemBusy:"The system is busy. Please try again later.",
      onlySupport:"I'm sorry, but for now, we only support questions related to the fields of openEuler and Linux.",
      copy: "Copy",
      copied_successfully: "Copied successfully.", 
      copied_failed: "Copied failed",   
      edit_successful:"Edit successful",
      edit_failed:"Edit failed",
      good_answer: "Good Answer",  
      bad_answer: "Bad Answer",  
      your_feedback_helps_us_improve: "Your feedback helps us improve.",  
      the_information_is_inappropriate_or_illegal: "The information is inappropriate or illegal.",  
      the_answer_is_not_helpful: "The answer is not helpful.",  
      i_found_an_error: "I found an error!",  
      enter_the_link_to_the_correct_answer: "Enter the link to the correct answer.",  
      describe_the_error: "Describe the error.",  
      submit: "Submit",  
      report: "Report",  
      reason_for_reporting: "Reason for Reporting",
      enter_a_description_for_your_report:"Enter a description for your report.",
      revoke:"Revoke",
      refresh:"Refresh",
    },
    Report:{
      pornographic_content: "Pornographic content",  
      account_violation: "Account violation",  
      politically_sensitive_content: "Politically sensitive content",  
      violence_or_terrorism: "Violence or terrorism",  
      defamation_or_rumor_spreading: "Defamation or rumor spreading",  
      insult_to_heroes_or_martyrs: "Insult to heroes or martyrs",  
      spam: "Spam",  
      ethnic_or_religious_incitement: "Ethnic or religious incitement",  
      disturbing_content: "Disturbing content",  
      abuse_or_harassment: "Abuse or harassment",  
      gambling_or_fraud: "Gambling or fraud",  
      consumer_manipulation: "Consumer manipulation",  
      harm_to_minors: "Harm to minors",  
      illegal_or_prohibited_items: "Illegal or prohibited items",  
      other_violations: "Other violations"
    },
    Login:{
      login: "Log In",  
      logout: "Log Out",  
      login_now: "Log In Now",  // 假设这里“立即登录”需要更明确的英文表达  
      account: "Account",  
      enter_account: "Please enter your account",  
      password: "Password",  
      enter_password: "Please enter your password",  
      incorrect_password: "Incorrect password",  
      api_key_management: "API Key Management",  
      no_api_key_available: "No API key is available",  
      create_api_key: "Create API Key",  
      api_key_display_once: "This API Key will be displayed only once. Please copy and save it securely.",  
      revoke: "Revoke",  // 为了与英文操作保持一致，我将“撤销”明确为对API Key的操作  
      refresh: "Refresh",
      unauthorized:"Unauthorized page, please login first"
    },
    question:{  
      open_euler_community_edition_categories: "Community Edition Categories",  
      lts_release_cycle_and_support: "LTS Release Cycle and Community Support Duration",  
      innovation_release_cycle_and_support: "Innovation Release Cycle and Community Support Duration",  
      container_cloud_platform_solution: "Container Cloud Platform Solution (CCPS) of the openEuler Community",  
      sec_gear_main_functions: "Main Functions of secGear",  
      dde_description: "What is DDE?",  
      lustre_description: "What is Lustre?",  
      open_euler_testing_management_platform: "Testing Management Platform of the openEuler Community",  
      open_euler_pkgship: "What is pkgship in openEuler?",  
      open_euler_software_package_introduction_principles: "Introduction Principles of openEuler Software Packages",  
      download_rpm_without_installing: "How to download an RPM package to the local system without installing it in openEuler?",  
      count_the_occurrences_of_the_hello:"Generate a shell command to count the occurrences of the 'hello' string in the 'test.txt' file.",
      convert_uppercase_to_lowercase: "Give me a shell command to convert uppercase letters to lowercase in text files in the current directory and its subdirectories",  
      list_files_with_specific_permissions: "Give me a shell command to find and list files with specific permissions in the current directory",  
      search_error_keyword_with_context: "Give me a shell command to search for the keyword 'error' in text files in the /home directory and its subdirectories, and output the matching lines along with the 3 lines before and after them to a file named 'result.txt'",  
      clear_dependencies_for_software_package: "How to clear dependencies for software packages in openEuler?",  
      gpgcheck_purpose_in_dnf: "What is the purpose of the gpgcheck parameter in DNF in openEuler?",  
      installonly_limit_function_in_dnf: "What is the function of the installonly_limit parameter in DNF in openEuler?",  
      clean_requirement_on_remove_function_in_dnf: "What is the function of the clean_requirement_on_remove parameter in DNF in openEuler?",  
      hunan_tobacco_monopoly_applications_on_openeuler: "What are the applications of Hunan Tobacco Monopoly based on openEuler?",  
      xsky_applications_on_openeuler: "What are the applications of XSKY based on openEuler?"  
  },
  upload: {
    upload_tip_text: "Maximum 10 files, 64 MB in total. Formats: pdf, docx, doc, txt, md, xlsx",
    uploading: "Upload...",
    upload_fail: "Upload failed",
    resolving: "Parsing...",
    resolve_fail: "Parsing failed",
    error_type_msg: "Upload failed, Invalid file type.",
    error_size_msg: "Upload failed, The number or size of files exceeds the upper limits.",
    error_name_msg: "Upload failed, Duplicate file names exit.",
    aside_session_file_count_front: "",
    aside_session_file_count_back: "files",
  },
  apikey: {
    save_apikey: "This API KEY is only displayed once, please copy and save it properly",
    no_apikey: "No available API key",
    create_apikey: "Create new API key",
  },
  witChainD: {
    witChainD: "WitChainD",
    describe_the_witChainD: "Please enter witChainD id",
    witChainD_id: "id",
  },
  flow: {
    flow_start: "Workflow in progress",
    flow_end: "Workflow completed",
    flow_params_error: "Missing parameters",
    flow_pause: "Workflow paused",
  }
}
  